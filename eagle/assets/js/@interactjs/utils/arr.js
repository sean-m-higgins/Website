export function contains(array, target) {
    return array.indexOf(target) !== -1;
}
export function remove(array, target) {
    return array.splice(array.indexOf(target), 1);
}
export function merge(target, source) {
    for (const item of source) {
        target.push(item);
    }
    return target;
}
export function from(source) {
    return merge([], source);
}
export function findIndex(array, func) {
    for (let i = 0; i < array.length; i++) {
        if (func(array[i], i, array)) {
            return i;
        }
    }
    return -1;
}
export function find(array, func) {
    return array[findIndex(array, func)];
}
export function some(array, func) {
    return findIndex(array, func) !== -1;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXJyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxRQUFRLENBQUUsS0FBSyxFQUFFLE1BQU07SUFDckMsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0FBQ3JDLENBQUM7QUFFRCxNQUFNLFVBQVUsTUFBTSxDQUFFLEtBQUssRUFBRSxNQUFNO0lBQ25DLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO0FBQy9DLENBQUM7QUFFRCxNQUFNLFVBQVUsS0FBSyxDQUFFLE1BQU0sRUFBRSxNQUFNO0lBQ25DLEtBQUssTUFBTSxJQUFJLElBQUksTUFBTSxFQUFFO1FBQ3pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7S0FDbEI7SUFFRCxPQUFPLE1BQU0sQ0FBQTtBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUsSUFBSSxDQUFFLE1BQU07SUFDMUIsT0FBTyxLQUFLLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0FBQzFCLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFFLEtBQUssRUFBRSxJQUFJO0lBQ3BDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDNUIsT0FBTyxDQUFDLENBQUE7U0FDVDtLQUNGO0lBRUQsT0FBTyxDQUFDLENBQUMsQ0FBQTtBQUNYLENBQUM7QUFFRCxNQUFNLFVBQVUsSUFBSSxDQUFFLEtBQUssRUFBRSxJQUFJO0lBQy9CLE9BQU8sS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQTtBQUN0QyxDQUFDO0FBRUQsTUFBTSxVQUFVLElBQUksQ0FBRSxLQUFLLEVBQUUsSUFBSTtJQUMvQixPQUFPLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjb250YWlucyAoYXJyYXksIHRhcmdldCkge1xuICByZXR1cm4gYXJyYXkuaW5kZXhPZih0YXJnZXQpICE9PSAtMVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlIChhcnJheSwgdGFyZ2V0KSB7XG4gIHJldHVybiBhcnJheS5zcGxpY2UoYXJyYXkuaW5kZXhPZih0YXJnZXQpLCAxKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2UgKHRhcmdldCwgc291cmNlKSB7XG4gIGZvciAoY29uc3QgaXRlbSBvZiBzb3VyY2UpIHtcbiAgICB0YXJnZXQucHVzaChpdGVtKVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbSAoc291cmNlKSB7XG4gIHJldHVybiBtZXJnZShbXSwgc291cmNlKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZEluZGV4IChhcnJheSwgZnVuYykge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGZ1bmMoYXJyYXlbaV0sIGksIGFycmF5KSkge1xuICAgICAgcmV0dXJuIGlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTFcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmQgKGFycmF5LCBmdW5jKSB7XG4gIHJldHVybiBhcnJheVtmaW5kSW5kZXgoYXJyYXksIGZ1bmMpXVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc29tZSAoYXJyYXksIGZ1bmMpIHtcbiAgcmV0dXJuIGZpbmRJbmRleChhcnJheSwgZnVuYykgIT09IC0xXG59XG4iXX0=